import { isArray } from 'lodash'

export default (http, store, router) => {
  http.interceptors.response.use(
    response => response,
    /**
    * This is a central point to handle all
    * error messages generated by HTTP
    * requests
    */
    (error) => {
      /**
      * If token is either expired, not provided or invalid
      * then redirect to login. On server side the error
      * messages can be changed on app/Providers/EventServiceProvider.php
      */
      if (error.response.status === 401) {
        router.push({ name: 'auth.singin' })
      }
      /**
      * Error messages are sent in arrays
      */
      if (isArray(error.response.data)) {
        store.dispatch('setMessage', { type: 'error', message: error.response.data.messages })
      /**
      * Laravel generated validation errors are
      * sent in an object
      */
      } else {
        store.dispatch('setMessage', { type: 'validation', message: error.response.data })
      }
      store.dispatch('setFetching', { fetching: false })
      return Promise.reject(error)
    }
  )
}
